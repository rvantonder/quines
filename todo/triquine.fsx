let python_source = "import sys\ndef a(): print \"p=\"+str(p);print \"c=\"+str(c);print ''.join([chr(x) for x in p])\ndef b(): print \"$p=\\\"\"+''.join(map(lambda x: hex(x)[2:] if x > 15 else hex(x)[2:].zfill(2), p))+\"\\\";\";print \"$c=\\\"\"+''.join(map(lambda x: hex(x)[2:] if x > 15 else hex(x)[2:].zfill(2), c))+\"\\\";\";print ''.join([chr(x) for x in c])\nf = b if len(sys.argv) > 1 and sys.argv[1] == 'arb' else a\nf()"
//printfn "%s" python_source

let perl_source = "sub a{\n\t@x=unpack(\"C*\",pack(\"H*\",$p));\n\tprint \"p=[\".join(', ',@x).\"]\\n\";\n\t@y=unpack(\"C*\",pack(\"H*\",$c));\n\tprint \"c=[\".join(', ',@y).\"]\\n\";\n\tprint pack('H*',$p).\"\\n\";\n}\nsub b{\n\tprint \"\\$p=\\\"$p\\\";\\n\";\n\t print \"\\$c=\\\"$c\\\";\\n\";\n\tprint pack('H*',$c).\"\\n\";\n}\nif (defined($ARGV[0]) && $ARGV[0] eq \"arb\"){\n\ta;\n} else {\n\tb;\n}"
//printfn "%s" perl_source

perl_source |> (fun x -> printf "let pl = [|"; Array.iter (printf "%d; ") (Array.map int <| x.ToCharArray()); printf "|]")
//outputs:
//let pl = [|115; 117; 98; 32; 97; 123; 10; 9; 64; 120; 61; 117; 110; 112; 97; 99; 107; 40; 34; 67; 42; 34; 44; 112; 97; 99; 107; 40; 34; 72; 42; 34; 44; 36; 112; 41; 41; 59; 10; 9; 112; 114; 105; 110; 116; 32; 34; 112; 61; 91; 34; 46; 106; 111; 105; 110; 40; 39; 44; 32; 39; 44; 64; 120; 41; 46; 34; 93; 92; 110; 34; 59; 10; 9; 64; 121; 61; 117; 110; 112; 97; 99; 107; 40; 34; 67; 42; 34; 44; 112; 97; 99; 107; 40; 34; 72; 42; 34; 44; 36; 99; 41; 41; 59; 10; 9; 112; 114; 105; 110; 116; 32; 34; 99; 61; 91; 34; 46; 106; 111; 105; 110; 40; 39; 44; 32; 39; 44; 64; 121; 41; 46; 34; 93; 92; 110; 34; 59; 10; 9; 112; 114; 105; 110; 116; 32; 112; 97; 99; 107; 40; 39; 72; 42; 39; 44; 36; 112; 41; 46; 34; 92; 110; 34; 59; 10; 125; 10; 115; 117; 98; 32; 98; 123; 10; 9; 112; 114; 105; 110; 116; 32; 34; 92; 36; 112; 61; 92; 34; 36; 112; 92; 34; 59; 92; 110; 34; 59; 10; 9; 32; 112; 114; 105; 110; 116; 32; 34; 92; 36; 99; 61; 92; 34; 36; 99; 92; 34; 59; 92; 110; 34; 59; 10; 9; 112; 114; 105; 110; 116; 32; 112; 97; 99; 107; 40; 39; 72; 42; 39; 44; 36; 99; 41; 46; 34; 92; 110; 34; 59; 10; 125; 10; 105; 102; 32; 40; 100; 101; 102; 105; 110; 101; 100; 40; 36; 65; 82; 71; 86; 91; 48; 93; 41; 32; 38; 38; 32; 36; 65; 82; 71; 86; 91; 48; 93; 32; 101; 113; 32; 34; 97; 114; 98; 34; 41; 123; 10; 9; 97; 59; 10; 125; 32; 101; 108; 115; 101; 32; 123; 10; 9; 98; 59; 10; 125; |]

python_source |> (fun x -> printf "let py = [|"; Array.iter (printf "%d; ") (Array.map int <| x.ToCharArray()); printf "|]")
//let py = [|105; 109; 112; 111; 114; 116; 32; 115; 121; 115; 10; 100; 101; 102; 32; 97; 40; 41; 58; 32; 112; 114; 105; 110; 116; 32; 34; 112; 61; 34; 43; 115; 116; 114; 40; 112; 41; 59; 112; 114; 105; 110; 116; 32; 34; 99; 61; 34; 43; 115; 116; 114; 40; 99; 41; 59; 112; 114; 105; 110; 116; 32; 39; 39; 46; 106; 111; 105; 110; 40; 91; 99; 104; 114; 40; 120; 41; 32; 102; 111; 114; 32; 120; 32; 105; 110; 32; 112; 93; 41; 10; 100; 101; 102; 32; 98; 40; 41; 58; 32; 112; 114; 105; 110; 116; 32; 34; 36; 112; 61; 92; 34; 34; 43; 39; 39; 46; 106; 111; 105; 110; 40; 109; 97; 112; 40; 108; 97; 109; 98; 100; 97; 32; 120; 58; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 32; 105; 102; 32; 120; 32; 62; 32; 49; 53; 32; 101; 108; 115; 101; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 46; 122; 102; 105; 108; 108; 40; 50; 41; 44; 32; 112; 41; 41; 43; 34; 92; 34; 59; 34; 59; 112; 114; 105; 110; 116; 32; 34; 36; 99; 61; 92; 34; 34; 43; 39; 39; 46; 106; 111; 105; 110; 40; 109; 97; 112; 40; 108; 97; 109; 98; 100; 97; 32; 120; 58; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 32; 105; 102; 32; 120; 32; 62; 32; 49; 53; 32; 101; 108; 115; 101; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 46; 122; 102; 105; 108; 108; 40; 50; 41; 44; 32; 99; 41; 41; 43; 34; 92; 34; 59; 34; 59; 112; 114; 105; 110; 116; 32; 39; 39; 46; 106; 111; 105; 110; 40; 91; 99; 104; 114; 40; 120; 41; 32; 102; 111; 114; 32; 120; 32; 105; 110; 32; 99; 93; 41; 10; 102; 32; 61; 32; 98; 32; 105; 102; 32; 108; 101; 110; 40; 115; 121; 115; 46; 97; 114; 103; 118; 41; 32; 62; 32; 49; 32; 97; 110; 100; 32; 115; 121; 115; 46; 97; 114; 103; 118; 91; 49; 93; 32; 61; 61; 32; 39; 97; 114; 98; 39; 32; 101; 108; 115; 101; 32; 97; 10; 102; 40; 41; |]

//py |> (fun x -> printfn "%A%s" x <| System.String.Join("", Array.map char x))
//pl |> (fun x -> printfn "%A%s" x <| System.String.Join("", Array.map char x))

let fsharp_source = "let s = function\n| \"py\" -> py |> (fun x -> printfn \"%A%s\" x <| System.String.Join(\"\", Array.map char x))\n| \"pl\" -> pl |> (fun x -> printfn \"%A%s\" x <| System.String.Join(\"\", Array.map char x)) \n| _ -> printf \"let pl = [|\"; Array.iter (printf \"%d; \") (Array.map int pl); printf \"|]\"; printf \"\\n\";\n        printf \"let py = [|\"; Array.iter (printf \"%d; \") py; printf \"|]\"; printf \"\\n\";\n        printf \"let fs = [|\"; Array.iter (printf \"%d; \") fs; printf \"|]\"; printf \"\\n\";\n        printf \"%s\" <| new string(Array.map char fs)"
fsharp_source |> (fun x -> printf "let fs = [|"; Array.iter (printf "%d; ") (Array.map int <| x.ToCharArray()); printf "|]")
//let fs = [|108; 101; 116; 32; 115; 32; 61; 32; 102; 117; 110; 99; 116; 105; 111; 110; 10; 124; 32; 34; 112; 121; 34; 32; 45; 62; 32; 112; 121; 32; 124; 62; 32; 40; 102; 117; 110; 32; 120; 32; 45; 62; 32; 112; 114; 105; 110; 116; 102; 110; 32; 34; 37; 65; 37; 115; 34; 32; 120; 32; 60; 124; 32; 83; 121; 115; 116; 101; 109; 46; 83; 116; 114; 105; 110; 103; 46; 74; 111; 105; 110; 40; 34; 34; 44; 32; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 99; 104; 97; 114; 32; 120; 41; 41; 10; 124; 32; 34; 112; 108; 34; 32; 45; 62; 32; 112; 108; 32; 124; 62; 32; 40; 102; 117; 110; 32; 120; 32; 45; 62; 32; 112; 114; 105; 110; 116; 102; 110; 32; 34; 37; 65; 37; 115; 34; 32; 120; 32; 60; 124; 32; 83; 121; 115; 116; 101; 109; 46; 83; 116; 114; 105; 110; 103; 46; 74; 111; 105; 110; 40; 34; 34; 44; 32; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 99; 104; 97; 114; 32; 120; 41; 41; 32; 10; 124; 32; 95; 32; 45; 62; 32; 112; 114; 105; 110; 116; 102; 32; 34; 108; 101; 116; 32; 112; 108; 32; 61; 32; 91; 124; 34; 59; 32; 65; 114; 114; 97; 121; 46; 105; 116; 101; 114; 32; 40; 112; 114; 105; 110; 116; 102; 32; 34; 37; 100; 59; 32; 34; 41; 32; 40; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 105; 110; 116; 32; 112; 108; 41; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 124; 93; 34; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 10; 34; 59; 10; 9; 9; 112; 114; 105; 110; 116; 102; 32; 34; 108; 101; 116; 32; 112; 121; 32; 61; 32; 91; 124; 34; 59; 32; 65; 114; 114; 97; 121; 46; 105; 116; 101; 114; 32; 40; 112; 114; 105; 110; 116; 102; 32; 34; 37; 100; 59; 32; 34; 41; 32; 112; 121; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 124; 93; 34; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 10; 34; 59; 10; 9; 9; 112; 114; 105; 110; 116; 102; 32; 34; 108; 101; 116; 32; 102; 115; 32; 61; 32; 91; 124; 34; 59; 32; 65; 114; 114; 97; 121; 46; 105; 116; 101; 114; 32; 40; 112; 114; 105; 110; 116; 102; 32; 34; 37; 100; 59; 32; 34; 41; 32; 102; 115; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 124; 93; 34; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 10; 34; 59; 10; 9; 9; 112; 114; 105; 110; 116; 102; 32; 34; 37; 115; 34; 32; 60; 124; 32; 110; 101; 119; 32; 115; 116; 114; 105; 110; 103; 40; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 99; 104; 97; 114; 32; 102; 115; 41; 32; |]

// the pl/py options still need the lists converted
let pl = [|115; 117; 98; 32; 97; 123; 10; 9; 64; 120; 61; 117; 110; 112; 97; 99; 107; 40; 34; 67; 42; 34; 44; 112; 97; 99; 107; 40; 34; 72; 42; 34; 44; 36; 112; 41; 41; 59; 10; 9; 112; 114; 105; 110; 116; 32; 34; 112; 61; 91; 34; 46; 106; 111; 105; 110; 40; 39; 44; 32; 39; 44; 64; 120; 41; 46; 34; 93; 92; 110; 34; 59; 10; 9; 64; 121; 61; 117; 110; 112; 97; 99; 107; 40; 34; 67; 42; 34; 44; 112; 97; 99; 107; 40; 34; 72; 42; 34; 44; 36; 99; 41; 41; 59; 10; 9; 112; 114; 105; 110; 116; 32; 34; 99; 61; 91; 34; 46; 106; 111; 105; 110; 40; 39; 44; 32; 39; 44; 64; 121; 41; 46; 34; 93; 92; 110; 34; 59; 10; 9; 112; 114; 105; 110; 116; 32; 112; 97; 99; 107; 40; 39; 72; 42; 39; 44; 36; 112; 41; 46; 34; 92; 110; 34; 59; 10; 125; 10; 115; 117; 98; 32; 98; 123; 10; 9; 112; 114; 105; 110; 116; 32; 34; 92; 36; 112; 61; 92; 34; 36; 112; 92; 34; 59; 92; 110; 34; 59; 10; 9; 32; 112; 114; 105; 110; 116; 32; 34; 92; 36; 99; 61; 92; 34; 36; 99; 92; 34; 59; 92; 110; 34; 59; 10; 9; 112; 114; 105; 110; 116; 32; 112; 97; 99; 107; 40; 39; 72; 42; 39; 44; 36; 99; 41; 46; 34; 92; 110; 34; 59; 10; 125; 10; 105; 102; 32; 40; 100; 101; 102; 105; 110; 101; 100; 40; 36; 65; 82; 71; 86; 91; 48; 93; 41; 32; 38; 38; 32; 36; 65; 82; 71; 86; 91; 48; 93; 32; 101; 113; 32; 34; 97; 114; 98; 34; 41; 123; 10; 9; 97; 59; 10; 125; 32; 101; 108; 115; 101; 32; 123; 10; 9; 98; 59; 10; 125; |]
let py = [|105; 109; 112; 111; 114; 116; 32; 115; 121; 115; 10; 100; 101; 102; 32; 97; 40; 41; 58; 32; 112; 114; 105; 110; 116; 32; 34; 112; 61; 34; 43; 115; 116; 114; 40; 112; 41; 59; 112; 114; 105; 110; 116; 32; 34; 99; 61; 34; 43; 115; 116; 114; 40; 99; 41; 59; 112; 114; 105; 110; 116; 32; 39; 39; 46; 106; 111; 105; 110; 40; 91; 99; 104; 114; 40; 120; 41; 32; 102; 111; 114; 32; 120; 32; 105; 110; 32; 112; 93; 41; 10; 100; 101; 102; 32; 98; 40; 41; 58; 32; 112; 114; 105; 110; 116; 32; 34; 36; 112; 61; 92; 34; 34; 43; 39; 39; 46; 106; 111; 105; 110; 40; 109; 97; 112; 40; 108; 97; 109; 98; 100; 97; 32; 120; 58; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 32; 105; 102; 32; 120; 32; 62; 32; 49; 53; 32; 101; 108; 115; 101; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 46; 122; 102; 105; 108; 108; 40; 50; 41; 44; 32; 112; 41; 41; 43; 34; 92; 34; 59; 34; 59; 112; 114; 105; 110; 116; 32; 34; 36; 99; 61; 92; 34; 34; 43; 39; 39; 46; 106; 111; 105; 110; 40; 109; 97; 112; 40; 108; 97; 109; 98; 100; 97; 32; 120; 58; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 32; 105; 102; 32; 120; 32; 62; 32; 49; 53; 32; 101; 108; 115; 101; 32; 104; 101; 120; 40; 120; 41; 91; 50; 58; 93; 46; 122; 102; 105; 108; 108; 40; 50; 41; 44; 32; 99; 41; 41; 43; 34; 92; 34; 59; 34; 59; 112; 114; 105; 110; 116; 32; 39; 39; 46; 106; 111; 105; 110; 40; 91; 99; 104; 114; 40; 120; 41; 32; 102; 111; 114; 32; 120; 32; 105; 110; 32; 99; 93; 41; 10; 102; 32; 61; 32; 98; 32; 105; 102; 32; 108; 101; 110; 40; 115; 121; 115; 46; 97; 114; 103; 118; 41; 32; 62; 32; 49; 32; 97; 110; 100; 32; 115; 121; 115; 46; 97; 114; 103; 118; 91; 49; 93; 32; 61; 61; 32; 39; 97; 114; 98; 39; 32; 101; 108; 115; 101; 32; 97; 10; 102; 40; 41; |]
let fs = [|108; 101; 116; 32; 115; 32; 61; 32; 102; 117; 110; 99; 116; 105; 111; 110; 10; 124; 32; 34; 112; 121; 34; 32; 45; 62; 32; 112; 121; 32; 124; 62; 32; 40; 102; 117; 110; 32; 120; 32; 45; 62; 32; 112; 114; 105; 110; 116; 102; 110; 32; 34; 37; 65; 37; 115; 34; 32; 120; 32; 60; 124; 32; 83; 121; 115; 116; 101; 109; 46; 83; 116; 114; 105; 110; 103; 46; 74; 111; 105; 110; 40; 34; 34; 44; 32; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 99; 104; 97; 114; 32; 120; 41; 41; 10; 124; 32; 34; 112; 108; 34; 32; 45; 62; 32; 112; 108; 32; 124; 62; 32; 40; 102; 117; 110; 32; 120; 32; 45; 62; 32; 112; 114; 105; 110; 116; 102; 110; 32; 34; 37; 65; 37; 115; 34; 32; 120; 32; 60; 124; 32; 83; 121; 115; 116; 101; 109; 46; 83; 116; 114; 105; 110; 103; 46; 74; 111; 105; 110; 40; 34; 34; 44; 32; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 99; 104; 97; 114; 32; 120; 41; 41; 32; 10; 124; 32; 95; 32; 45; 62; 32; 112; 114; 105; 110; 116; 102; 32; 34; 108; 101; 116; 32; 112; 108; 32; 61; 32; 91; 124; 34; 59; 32; 65; 114; 114; 97; 121; 46; 105; 116; 101; 114; 32; 40; 112; 114; 105; 110; 116; 102; 32; 34; 37; 100; 59; 32; 34; 41; 32; 40; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 105; 110; 116; 32; 112; 108; 41; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 124; 93; 34; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 92; 110; 34; 59; 10; 32; 32; 32; 32; 32; 32; 32; 32; 112; 114; 105; 110; 116; 102; 32; 34; 108; 101; 116; 32; 112; 121; 32; 61; 32; 91; 124; 34; 59; 32; 65; 114; 114; 97; 121; 46; 105; 116; 101; 114; 32; 40; 112; 114; 105; 110; 116; 102; 32; 34; 37; 100; 59; 32; 34; 41; 32; 112; 121; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 124; 93; 34; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 92; 110; 34; 59; 10; 32; 32; 32; 32; 32; 32; 32; 32; 112; 114; 105; 110; 116; 102; 32; 34; 108; 101; 116; 32; 102; 115; 32; 61; 32; 91; 124; 34; 59; 32; 65; 114; 114; 97; 121; 46; 105; 116; 101; 114; 32; 40; 112; 114; 105; 110; 116; 102; 32; 34; 37; 100; 59; 32; 34; 41; 32; 102; 115; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 124; 93; 34; 59; 32; 112; 114; 105; 110; 116; 102; 32; 34; 92; 110; 34; 59; 10; 32; 32; 32; 32; 32; 32; 32; 32; 112; 114; 105; 110; 116; 102; 32; 34; 37; 115; 34; 32; 60; 124; 32; 110; 101; 119; 32; 115; 116; 114; 105; 110; 103; 40; 65; 114; 114; 97; 121; 46; 109; 97; 112; 32; 99; 104; 97; 114; 32; 102; 115; 41; 32; |]
let s = function
| "py" -> py |> (fun x -> printfn "%A%s" x <| System.String.Join("", Array.map char x))
| "pl" -> pl |> (fun x -> printfn "%A%s" x <| System.String.Join("", Array.map char x)) 
| _ -> printf "let pl = [|"; Array.iter (printf "%d; ") (Array.map int pl); printf "|]"; printf "\n";
        printf "let py = [|"; Array.iter (printf "%d; ") py; printf "|]"; printf "\n";
        printf "let fs = [|"; Array.iter (printf "%d; ") fs; printf "|]"; printf "\n";
        printf "%s" <| new string(Array.map char fs)

s "A"
